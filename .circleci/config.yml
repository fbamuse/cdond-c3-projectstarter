version: 2.1

### It's a good practice to keep your commands at the top of the config file. In this project, you'll need at least 2 commands:

# commands:
#   destroy-environment:
#     description: Destroy backend and frontend cloudformation stacks given a workflow ID.
#     ...

#   revert-migration:
#     description: Revert the last migration if successfully run in the current workflow.
#     ...

jobs:

  build-frontend:
    environment:
      CODE: 123
    docker:
      - image:  circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [frontend-build]
      - run:
          name: build frontend
          command: |
            cd frontend
            echo $CODE
            npm install
            npm run build
      - save_cache:
          paths: [ frontend/node_modules]
          key: frontend-build
      - run:
          name: on error
          command: echo "build frontend Error!"
          when: on_fail

  build-backend:
    docker:
      - image:  circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [backend-build]
      - run:
          name: build backend
          command: |
            cd backend
            echo $CODE
            npm install
            npm run build
      - save_cache:
          paths: [ backend/node_modules]
          key: backend-build
      - run:
          name: on error
          command: echo "build backend Error!"
          when: on_fail

  test-frontend:
    docker:
      - image:  circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [frontend-build]
      - run:
          name: run frontend test
          command: |
            cd frontend
            echo $CODE
            npm install
            npm run test
      - save_cache:
          paths: [ frontend/node_modules]
          key: frontend-build
      - run:
          command: |
            mkdir -p ~/f_reports
          when: always
      - store_test_results:
          path: ~/f_reports
      - run:
          name: on error
          command: echo "test frontend Error!"
          when: on_fail

  test-backend:
    docker:
      - image:  circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [backend-build]
      - run:
          name: run backend test
          command: |
            cd backend
            echo $CODE
            npm install
            npm run test
      - save_cache:
          paths: [ backend/node_modules]
          key: backend-
      - run:
          command: |
            mkdir -p ~/b_reports
          when: always
      - store_test_results:
          path: ~/b_reports
      - run:
          name: on error
          command: echo "test backend Error!"
          when: on_fail
#  build-frontend:

#  test-frontend:

#  est-backend:

#  can-frontend:

#  scan-backend:

#  deploy-infrastructure:

#  configure-infrastructure:

#  run-migrations:

#  deploy-frontend:

#  deploy-backend:  

#  smoke-test:

#  cloudfront-update:

workflows:
  my_workflow:
    jobs:
      - build-frontend
      - test-frontend:
          requires:
            - build-frontend
      - build-backend
      - test-backend:
          requires:
            - build-backend
